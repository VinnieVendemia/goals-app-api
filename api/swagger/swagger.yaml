swagger: "2.0"
info:
  version: "1.0.0"
  title: "Goals App Api"
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /users:
    # our controller name
    x-swagger-router-controller: user
    get:
      tags: 
        - users
      operationId: getAll
      description: get the user list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags: 
        - users
      operationId: save
      description: add a new user to the list
      # goal info to be stored
      parameters:
        - name: user
          description: Create a new user
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{id}:
    # our controller name
    x-swagger-router-controller: user
    get:
      tags: 
        - users
      operationId: getOne
      description: get a user
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags: 
        - users
      operationId: update
      description: update a user
      # define the parameters
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
        - name: user
          description: User properties
          in: body
          required: false
          schema:
            $ref: "#/definitions/UserUpdate"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags: 
        - users
      operationId: delUser
      description: delete a user
      # define the parameters
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /goals:
    # our controller name
    x-swagger-router-controller: goal
    get:
      tags: 
        - goals
      operationId: getAll
      description: get the goals list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetGoalsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags: 
        - goals
      operationId: save
      description: add a new goal to the list
      # goal info to be stored
      parameters:
        - name: goal
          description: Goal description
          in: body
          required: true
          schema:
            $ref: "#/definitions/Goal"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /goals/{id}:
    # our controller name
    x-swagger-router-controller: goal
    get:
      tags: 
        - goals
      operationId: getOne
      description: get a goal
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetGoalResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags: 
        - goals
      operationId: update
      description: update a goal
      # define the parameters
      parameters:
        - name: id
          description: Goal id
          type: string
          in: path
          required: true
        - name: user
          description: Goal properties
          in: body
          required: false
          schema:
            $ref: "#/definitions/GoalUpdate"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags: 
        - goals
      operationId: delGoal
      description: delete a goal
      # define the parameters
      parameters:
        - name: id
          description: Goal id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /progress:
    # our controller name
    x-swagger-router-controller: progress
    get:
      tags: 
        - progress
      operationId: getAll
      description: get all progress items
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetProgressListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags: 
        - progress
      operationId: save
      description: add a new progress to the list
      # progress info to be stored
      parameters:
        - name: progress
          description: Create a new progress
          in: body
          required: true
          schema:
            $ref: "#/definitions/Progress"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /progress/{id}:
    # our controller name
    x-swagger-router-controller: progress
    get:
      tags: 
        - progress
      operationId: getProgressByGoal
      description: get a list of progress by goal_id
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetProgressListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags: 
        - progress
      operationId: delProgress
      description: delete a progress item
      # define the parameters
      parameters:
        - name: id
          description: Progress id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /api-docs:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  GetUserListResponse:
    required:
      - users
    properties:
      # The array of users
      users:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            username:
              type: string
            password:
              type: string
            admin:
              type: string
  GetGoalsListResponse:
    required:
      - goals
    properties:
      # The array of goals
      goals:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            title:
              type: string
            description:
              type: string
  GetProgressListResponse:
    required:
        - progress
    properties:
      # The array of progress
      progress:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            description:
              type: string
            scale: 
              type: string 
            date:
              type: string
            goal_id:
                type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  GetGoalResponse:
    required:
      - id
      - title
    properties:
      id:
        type: string
      title: 
        type: string
  GetUserResponse:
    required:
      - id
      - username
      - admin
    properties:
      id:
        type: string
      username: 
        type: string
      admin:
        type: string
  Goal:
    type: object
    properties:
      title:
        type: string
        description: task object name
      description:
        type: string
        description: task object name
    required:
      - title
  User:
    type: object
    properties:
      username:
        type: string
        description: task object name
      password:
        type: string
        description: task object name
      admin:
        type: string
        description: task object name
    required:
      - username
      - password
      - admin
  Progress:
    type: object
    properties:
      description:
        type: string
        description: task object name
      scale:
        type: integer
        description: task object name
      date:
        type: string
        description: task object name
      goal_id:
        type: integer
        description: task object name
    required:
      - scale
      - date
      - goal_id
  UserUpdate:
    type: object
    properties:
      username:
        type: string
        description: task object name
      password:
        type: string
        description: task object name
      admin:
        type: string
        description: task object name
  GoalUpdate:
    type: object
    properties:
      title:
        type: string
        description: task object name
      description:
        type: string
        description: task object name
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description
